- name: install certbot
  apt:
    name: certbot
    state: latest

- name: install certbot digitalocean plugin
  apt:
    name: python3-certbot-dns-digitalocean 
    state: latest

- name: "Create record for *.piranhalab.cc"
  community.digitalocean.digital_ocean_domain_record:
    oauth_token: "{{ lookup('env', 'DO_TOKEN' ) }}"
    state: present
    domain: piranhalab.cc
    type: A
    name: "*"
    force_update: yes
    data: "{{ lookup('env', 'IP') }}"

- name: check certs for existance
  stat:
    path: /etc/letsencrypt/live/piranhalab.cc/
  register: certs_path

- name: create DO creds file
  ansible.builtin.template:
    src: files/certbot-creds.ini
    dest: /tmp/certbot-creds.ini
    mode: '600'
  when: not certs_path.stat.exists

- name: create cert for "*.piranhalab" in case certs does not exists
  shell: certbot certonly --dns-digitalocean --dns-digitalocean-credentials ~/certbot-creds.ini -d '*.piranhalab.cc'
  when: not certs_path.stat.exists

- name: list directories
  local_action:
    module: find
    paths: "{{ lookup('env', 'GITHUB_WORKSPACE' ) }}"
    recurse: no
    file_type: directory
    excludes: "piranhalab.cc,.ansible"
  register: directories

- name: check if CNAME certs exists
  stat:
    path: "/etc/letsencrypt/live/www.{{ item.path | basename }}.piranhalab.cc/"
  register: subdom_certs_path
  with_items: "{{ directories.files }}"

- name: debug CNAMES
  debug:
    msg: "{{ subdom_certs_path.results }}"

- name: create cert for each CNAME subdomain 
  shell: certbot certonly --dns-digitalocean --dns-digitalocean-credentials ~/certbot-creds.ini -d "www.{{ item.item.path | basename }}.piranhalab.cc"
  with_items: "{{ subdom_certs_path.results }}"
  when: not item.stat.exists

- name: Add cronjob for cert renewal
  cron:
    name: cert_renewal
    special_time: weekly
    job: certbot renew --quiet && nginx -s reload
